apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: wurstmeister/kafka:2.12-2.5.0
        env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka:9092
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://0.0.0.0:9092
        - name: KAFKA_BROKER_ID
          value: "1"
        ports:
        - containerPort: 9092

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: wurstmeister/zookeeper:3.4.6
        ports:
        - containerPort: 2181

---
apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  selector:
    app: kafka
  ports:
    - protocol: TCP
      port: 9092
      targetPort: 9092

---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  selector:
    app: zookeeper
  ports:
    - protocol: TCP
      port: 2181
      targetPort: 2181

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-command
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-command
  template:
    metadata:
      labels:
        app: backend-command
    spec:
      containers:
      - name: backend-command
        image: backend-command:1.0.0
        ports:
        - containerPort: 8000

---
apiVersion: v1
kind: Service
metadata:
  name: backend-command
spec:
  selector:
    app: backend-command
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-query
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-query
  template:
    metadata:
      labels:
        app: backend-query
    spec:
      containers:
      - name: backend-query
        image: backend-query:1.0.0
        ports:
        - containerPort: 8000

---
apiVersion: v1
kind: Service
metadata:
  name: backend-query
spec:
  selector:
    app: backend-query
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: todo-ui
  template:
    metadata:
      labels:
        app: todo-ui
    spec:
      containers:
      - name: todo-ui
        image: todo-ui:1.0.0
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: todo-ui
spec:
  selector:
    app: todo-ui
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: domain-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: backend-query.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: backend-query
            port:
              number: 80
  - host: todo-ui.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: todo-ui
            port:
              number: 80
